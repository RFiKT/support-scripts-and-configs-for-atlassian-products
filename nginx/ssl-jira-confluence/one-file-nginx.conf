user nginx;
worker_processes  auto;

error_log /var/log/nginx/error.log;
pid /run/nginx.pid;
  
events {
  worker_connections  1024;
  multi_accept on;
}
  
http {
  server_names_hash_bucket_size 64;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
	
  #include /etc/nginx/conf.d/*.conf;
  access_log  /var/log/nginx/access.log  main;
  include       mime.types;
  default_type  application/octet-stream;
  
  open_file_cache max=200000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;
	
  sendfile on;  
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  keepalive_requests 1000;
  reset_timedout_connection on;
  client_body_timeout 100;
  send_timeout 30;
  
  client_max_body_size 120M;
  types_hash_max_size 2048;
	
  gzip  on;
  gzip_comp_level  2;
  gzip_proxied expired no-cache no-store private auth;
  gzip_min_length 10240;
  gzip_types  text/plain text/css text/javascript text/xml application/x-javascript application/xml application/xml+rss application/vnd.ms-powerpoint;
  gzip_disable "msie6";
  gzip_vary on;
  
  ssl_session_timeout  5m; 
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-     AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers   on;
  ssl_session_cache    shared:SSL:1m;  
  ssl_certificate     /etc/nginx/ssl/cert.crt;
  ssl_certificate_key /etc/nginx/ssl/private.key;
  	
  server {
    listen  80;
    server_name example.com;
    return  301 https://$server_name$request_uri;
  }
  
  server {
    listen 443 ssl;
    server_name example.com;
		
  	location = / {
    	   return 301 https://$server_name/jira;
  	}
		
	 location /jira {
	    proxy_set_header X-Forwarded-Host $host;
	    proxy_set_header X-Forwarded-Server $host;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
	    proxy_pass http://localhost:8080/jira;
	  }
		
	 location /wiki {
	    proxy_set_header X-Forwarded-Host $host;
	    proxy_set_header X-Forwarded-Server $host;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
	    proxy_pass http://localhost:8090/wiki;
	    #CONFSERVER-45362
	    proxy_ignore_client_abort on;
	  }
		
	 location /synchrony {
	    proxy_set_header X-Forwarded-Host $host;
	    proxy_set_header X-Forwarded-Server $host;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_pass http://localhost:8091/synchrony;
	    proxy_http_version 1.1;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection "Upgrade";
	 }
   }
}
